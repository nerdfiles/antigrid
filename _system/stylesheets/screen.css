/***
@fileOverview

                      _             _     _
                  _  (_)           (_)   | |
     _____ ____ _| |_ _  ____  ____ _  __| |
    (____ |  _ (_   _) |/ _  |/ ___) |/ _  |
    / ___ | | | || |_| ( (_| | |   | ( (_| |
    \_____|_| |_| \__)_|\___ |_|   |_|\____|
                       (_____|

A SASS-y "abstract" and lightweight responsive grid system.

@project   antigrid
@version   0.0.1
@package   html5-css3
@author    nerdfiles
@cssdoc    version 1.0-pre
@license   WTFPL

***/
/*@import "compass/reset";*/
/* ------------------------------ Defaults  */
/* ------------------------------ Global  */
/* line 39, ../sass/screen.scss */
* {
  box-sizing: border-box;
}

/** ----------------------------- Basic Functions

    @description

      Lifted from ZURB's Foundation 5.

    @see http://sass-lang.com/documentation/Sass/Script/Functions.html#nth-instance_method,
      http://sass-lang.com/documentation/Sass/Script/Functions.html#length-instance_method

**/
/** ----------------------------- Media Queries

    @description

      Modified from ZURB's Foundation 5.

    @usage

      @media \$small {
      }

      @media \$slinder {
      }

      @media \$medium {
      }

      @media \$large {
      }

**/
/* 0, 320px */
/* 641px, 800px */
/* 641px, 1024px */
/* 1025px, 1440px */
/* 1441px, 1920px */
/* 1921px */
/* ------------------------------ Utilities  */
/* ------------------------------ Grid System  */
/* ------------------------------ Elements  */
/* ------------------------------ Implementation  */
/* line 394, ../sass/screen.scss */
:root {
  /*
    A full-height viewport splitter tool. Use at top level of SASS/CSS document.

    @note If $vertical-center is true, then we are expecting that our grid 
          system will not be applied for the topmost level; so nesting within 
          another arbitrary, non-semantic layer will be necessary; that is, 
          three "ranks" will be necessary before the grid can take place 
          with centering.

    @usage

      <body>
        <div class="rank">
          <div class="rank">
          </div>
          <div class="rank">
          </div>
        </div>
      </body>

    @detail

      -----------------------------
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      -----------------------------

  */
}
/* line 164, ../sass/screen.scss */
:root, :root body {
  height: 100%;
}
/* line 168, ../sass/screen.scss */
:root body > .rank {
  min-height: 100%;
  display: flex;
}
/* line 173, ../sass/screen.scss */
:root body > .rank > .rank {
  padding-left: 0;
  padding-right: 0;
  flex: 1;
  min-height: 100%;
  justify-content: center;
  flex-direction: column;
}

/* line 398, ../sass/screen.scss */
:root.with-centered-ranks {
  /*
    A full-height viewport splitter tool. Use at top level of SASS/CSS document.

    @note If $vertical-center is true, then we are expecting that our grid 
          system will not be applied for the topmost level; so nesting within 
          another arbitrary, non-semantic layer will be necessary; that is, 
          three "ranks" will be necessary before the grid can take place 
          with centering.

    @usage

      <body>
        <div class="rank">
          <div class="rank">
          </div>
          <div class="rank">
          </div>
        </div>
      </body>

    @detail

      -----------------------------
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      |             |             |
      -----------------------------

  */
}
/* line 164, ../sass/screen.scss */
:root.with-centered-ranks, :root.with-centered-ranks body {
  height: 100%;
}
/* line 168, ../sass/screen.scss */
:root.with-centered-ranks body > .rank {
  min-height: 100%;
  display: flex;
}
/* line 173, ../sass/screen.scss */
:root.with-centered-ranks body > .rank > .rank {
  padding-left: 0;
  padding-right: 0;
  flex: 1;
  min-height: 100%;
  display: flex;
  justify-content: center;
  flex-direction: column;
}

@media screen and (min-width: 960px) {
  /*
    @abstract
    @usage

      <div class="rank">
        <div class="file-l{{N}}-m{{N}}-s{{N}}">
        ...
        </div>
      </div

    @detail file-l4-m3-s6::file-l2-m3-s6

      "large"
      -----------------------------
      |                   |       |
      |                   |       |
      -----------------------------

      "medium"
      ---------------------
      |         |         |
      |         |         |
      ---------------------

      "small"
      --------
      |      |
      |      |
      --------
      |      |
      |      |
      --------

  */
  /* line 253, ../sass/screen.scss */
  [class*="-l6"] {
    width: 100%;
  }

  /* line 257, ../sass/screen.scss */
  [class*="-l5"] {
    width: 83.333333334%;
  }

  /* line 261, ../sass/screen.scss */
  [class*="-l4"] {
    width: 66.666666667%;
  }

  /* line 265, ../sass/screen.scss */
  [class*="-l3"] {
    width: 50%;
  }

  /* line 269, ../sass/screen.scss */
  [class*="-l2"] {
    width: 33.333333333%;
  }

  /* line 273, ../sass/screen.scss */
  [class*="-l1"] {
    width: 16.666666667%;
  }
}
@media screen and (min-width: 500px) and (max-width: 959px) {
  /*
    @abstract
    @usage

      <div class="rank">
        <div class="file-l{{N}}-m{{N}}-s{{N}}">
        ...
        </div>
      </div

    @detail file-l4-m3-s6::file-l2-m3-s6

      "large"
      -----------------------------
      |                   |       |
      |                   |       |
      -----------------------------

      "medium"
      ---------------------
      |         |         |
      |         |         |
      ---------------------

      "small"
      --------
      |      |
      |      |
      --------
      |      |
      |      |
      --------

  */
  /* line 253, ../sass/screen.scss */
  [class*="-m6"] {
    width: 100%;
  }

  /* line 257, ../sass/screen.scss */
  [class*="-m5"] {
    width: 83.333333334%;
  }

  /* line 261, ../sass/screen.scss */
  [class*="-m4"] {
    width: 66.666666667%;
  }

  /* line 265, ../sass/screen.scss */
  [class*="-m3"] {
    width: 50%;
  }

  /* line 269, ../sass/screen.scss */
  [class*="-m2"] {
    width: 33.333333333%;
  }

  /* line 273, ../sass/screen.scss */
  [class*="-m1"] {
    width: 16.666666667%;
  }
}
@media screen and (max-width: 499px) {
  /*
    @abstract
    @usage

      <div class="rank">
        <div class="file-l{{N}}-m{{N}}-s{{N}}">
        ...
        </div>
      </div

    @detail file-l4-m3-s6::file-l2-m3-s6

      "large"
      -----------------------------
      |                   |       |
      |                   |       |
      -----------------------------

      "medium"
      ---------------------
      |         |         |
      |         |         |
      ---------------------

      "small"
      --------
      |      |
      |      |
      --------
      |      |
      |      |
      --------

  */
  /* line 253, ../sass/screen.scss */
  [class*="-s6"] {
    width: 100%;
  }

  /* line 257, ../sass/screen.scss */
  [class*="-s5"] {
    width: 83.333333334%;
  }

  /* line 261, ../sass/screen.scss */
  [class*="-s4"] {
    width: 66.666666667%;
  }

  /* line 265, ../sass/screen.scss */
  [class*="-s3"] {
    width: 50%;
  }

  /* line 269, ../sass/screen.scss */
  [class*="-s2"] {
    width: 33.333333333%;
  }

  /* line 273, ../sass/screen.scss */
  [class*="-s1"] {
    width: 16.666666667%;
  }
}
/* line 414, ../sass/screen.scss */
[class*="file"] {
  display: block;
  float: left;
  padding: 0 10px;
}

/* line 420, ../sass/screen.scss */
.rank {
  /*
    @abstract
  */
  width: 100%;
  max-width: "1000px";
  margin: 0 auto;
}
/* line 197, ../sass/screen.scss */
.rank:before {
  content: "";
  display: table;
}
/* line 202, ../sass/screen.scss */
.rank:after {
  content: "";
  display: table;
  clear: both;
}
/* line 212, ../sass/screen.scss */
.rank .rank > [class*="file"]:first-child {
  padding-left: 0;
}

/* line 424, ../sass/screen.scss */
[class*="file"] img {
  width: 100%;
  height: auto;
}

/* line 429, ../sass/screen.scss */
.castling {
  /*
    @usage

    <ul class="castling">
      <li>...</li>
      <li>...</li>
      <li>...</li>
      <li>...</li>
    </ul>
  */
}
/* line 291, ../sass/screen.scss */
.castling:after {
  content: '';
  display: inline-block;
  width: 100%;
  /*border-bottom : 5px dashed #922d8d;*/
}
/* line 298, ../sass/screen.scss */
.castling {
  text-align: justify;
  /*font-size   : 0;*/
  font-size: 0.1px;
  padding: 0;
}
/* line 305, ../sass/screen.scss */
.castling li {
  list-style: none;
  display: inline-block;
  width: 23%;
  /*height        : 0;*/
  transition: all 150ms ease-out;
  font-size: 16px;
  text-align: left;
}
/* line 315, ../sass/screen.scss */
.castling .interpose {
  padding: 0;
  /*background    : none;*/
  border-bottom: 5px solid #922d8d;
}
/* line 321, ../sass/screen.scss */
.castling .break {
  width: 100%;
  height: 0;
}

/* line 433, ../sass/screen.scss */
.flank {
  /*
    Flanks include rows.

    @usage

      <div class="row-1">
        1
      </div>
      <div class="row-3">
        3
      </div>
      <div class="row-2">
        2
      </div>

  */
}
/* line 347, ../sass/screen.scss */
.flank .row-1 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 1) - 10px);
  margin-bottom: 10px;
}
/* line 347, ../sass/screen.scss */
.flank .row-2 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 2) - 10px);
  margin-bottom: 10px;
}
/* line 347, ../sass/screen.scss */
.flank .row-3 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 3) - 10px);
  margin-bottom: 10px;
}
/* line 347, ../sass/screen.scss */
.flank .row-4 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 4) - 10px);
  margin-bottom: 10px;
}
/* line 347, ../sass/screen.scss */
.flank .row-5 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 5) - 10px);
  margin-bottom: 10px;
}
/* line 347, ../sass/screen.scss */
.flank .row-6 {
  /*$offset     : $offset / $rows;*/
  overflow-x: hidden !important;
  overflow-y: auto;
  height: calc((((100vh - 100px) / 6) * 6) - 10px);
  margin-bottom: 10px;
}

/** ----------------------------- Normalization

    @consider https://github.com/marxo/Canonical.css/blob/master/canonical.scss

**/
/* line 442, ../sass/screen.scss */
* {
  line-height: 1.25em;
}
/* line 367, ../sass/screen.scss */
* a {
  color: "#111111";
}
/* line 371, ../sass/screen.scss */
* a:link {
  color: "#111111";
}
/* line 375, ../sass/screen.scss */
* a:visited {
  color: "#999999";
}
/* line 379, ../sass/screen.scss */
* a:hover {
  color: "#f1f1f1";
}
/* line 383, ../sass/screen.scss */
* a:active {
  color: "#003399";
}

/* line 447, ../sass/screen.scss */
body {
  font-family: sans-serif;
  color: #313233;
  margin: 0;
}

/* line 453, ../sass/screen.scss */
p, img {
  margin: 0 0 20px 0;
}

/* line 457, ../sass/screen.scss */
pre {
  margin: 1.6em 0;
}

/* line 461, ../sass/screen.scss */
strong {
  font-style: italic;
}
